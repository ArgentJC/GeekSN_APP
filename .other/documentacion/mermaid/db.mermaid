``` mermaid
erDiagram

    %% Definición de entidades y sus atributos
    %% Clave primaria de la futura base de datos -> (PK)
    %% Clave foránea de la futura base de datos -> (FK)

    VIDEOJUEGO {
        int id_videojuego PK
        int rawg_id
        string name
        string background_image
        date fecha_lanzamiento
        int metacritic_rating
    }

    GENERO {
        int id_genero PK
        int rawg_genre_id
        string nombre
    }

    USUARIO {
        int id_usuario PK
        string correo
        string nombre
        string apellido1
        string apellido2
        string nombre_usuario
        string password
    }

    COLECCION {
        int id_coleccion PK
        int id_usuario FK "Propietario"
        string nombre
        text descripcion
        date fecha_creacion
        date fecha_modificacion
    }

    COMENTARIO_VIDEOJUEGO {
        int id_videojuego FK
        int id_usuario FK
        text comentario
        int cantidad_likes
        int cantidad_dislikes
        int valoracion_videojuego
    }

    COMENTARIO_COLECCION {
        int id_coleccion FK
        int id_usuario FK
        text comentario
        int cantidad_likes
        int cantidad_dislikes
        int valoracion_coleccion
    }

    USUARIO_LIKE_VIDEOJUEGO {
        int id_videojuego FK
        int id_usuario FK
    }

    USUARIO_LIKE_COMENTARIO {
        int id_comentario FK
        int id_usuario FK
    }

    USUARIO_LIKE_COLECCION {
        int id_coleccion FK
        int id_usuario FK
    }

    VIDEOJUEGO_COLECCION {
        int id_videojuego FK
        int id_coleccion FK
    }

    ASIGNACIONES_GENERO_VIDEOJUEGO {
        int id_videojuego FK
        int id_genero FK
    }

    FRIEND_REQUEST {
        int usuario_emisor FK
        int usuario_receptor FK
    }

    COLECCION_USUARIO {
        int id_usuario FK
        int id_coleccion FK
    }

    %% Relaciones %%

    USUARIO ||--o{ COLECCION : "crea"
    USUARIO ||--o{ COMENTARIO_VIDEOJUEGO : "comenta"
    USUARIO ||--o{ COMENTARIO_COLECCION : "comenta"

    %% Nota sobre USUARIO_LIKE_VIDEOJUEGO:
    %% UN usuario puede dar like a 0 o N videojuegos,
    %% de esta forma queremos guardar los videojuegos que le gustan
    USUARIO ||--o{ USUARIO_LIKE_VIDEOJUEGO : "da_like_a"
    USUARIO ||--o{ USUARIO_LIKE_COMENTARIO : "da_like_a"
    USUARIO ||--o{ USUARIO_LIKE_COLECCION : "da_like_a"

    VIDEOJUEGO ||--o{ COMENTARIO_VIDEOJUEGO : "tiene_comentarios"
    VIDEOJUEGO ||--o{ ASIGNACIONES_GENERO_VIDEOJUEGO : "tiene_generos"
    VIDEOJUEGO ||--o{ VIDEOJUEGO_COLECCION : "pertenece_a"

    GENERO ||--o{ ASIGNACIONES_GENERO_VIDEOJUEGO : "asignado_a"

    COLECCION ||--o{ VIDEOJUEGO_COLECCION : "contiene"
    COLECCION ||--o{ COMENTARIO_COLECCION : "tiene_comentarios"

    %% Nota sobre USUARIO_LIKE_COMENTARIO:
    %% Un usuario puede dar like a 0 a N comentarios,
    %% de esta forma queremos que quede constancia de que comentarios ha dado like el usuario.
    COMENTARIO_VIDEOJUEGO ||--o{ USUARIO_LIKE_COMENTARIO : "es_likeado"

    %% Nota sobre USUARIO_LIKE_COLECCION:
    %% Un usuario puede dar like a 0 o N colecciones, 
    %% de esta forma queremos guardar las colecciones que le gustan.
    COLECCION ||--o{ USUARIO_LIKE_COLECCION : "es_likeada"

    %% Nota sobre FRIEND_RESQUEST:
    %% Un usuario puede enviar una solicitud de amistad a 0 o N usuarios,
    %% y recibir, por lo tanto, de 0 a N solicitudes de amistad.
    USUARIO ||--o{ FRIEND_REQUEST : "envia_solicitud"
    USUARIO ||--o{ FRIEND_REQUEST : "recibe_solicitud"

    %% Nota sobre COLECCION_USUARIO:
    %% Un usuario puede tener de 0 a N colecciones,
    %% queremos guardar todas las colecciones del usuario.
    USUARIO ||--o{ COLECCION_USUARIO : "asociado_a"
    COLECCION ||--o{ COLECCION_USUARIO : "tiene_asociacion"
``` 
